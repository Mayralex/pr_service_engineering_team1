# ADR 015: Clear backend architecture

## Date

2023-12-20

## Status

Active

## Context

In order to understand the system's components and their interactions, the project structure of the backend has to be easily understandable. This lack of clarity can impede development speed, maintenance efforts, and onboarding of new team members.

## Decision

Implementing a clear backend architecture will yield several benefits:

- **Modularization:** Defining and categorizing backend components into clear, modular units based on their functionalities and responsibilities.
- **Documentation:** Documenting the purpose, interactions and interfaces of each module
- **Coding standards and naming conventions:** Ensuring consistent coding standards and naming conventions are followed

We decided on the following base modules:

- **Controller**: Defines the REST endpoints for interacting with external systems (our frontend)
- **Service**: Contains the logic, is used by the controller and calls methods from the repository
- **Repository**: Our Repository containing the data (ADRs). We extend JpaRepository, making complex queries on our data possible
- **Entity**: Include our entities, such as ADR (we use lombok annotations to facilitate constructor, getter and setter creation)
- **Div**: Includes diverse classes, such as our Parser, which Parses fetched ADRs
- **Exceptions**_ Include custom exceptions

## Consequences

Implementing a clear backend architecture will yield several benefits:

- **Better Understanding:** Improved comprehension of the system's components and interactions will streamline development, maintenance, and troubleshooting.
- **Accelerated Onboarding: ** Clear documentation and modularization will expedite the onboarding process for new team members.
- **Consistency and Stability:** Standardization will result in a more consistent and stable backend, reducing errors and enhancing reliability.

## Commit

`9d4ee7a`

## Artifacts

- [backend.ADR_Viewer.src.main.java.org.serviceEngineering.adrViewer.controller](../../backend/ADR_Viewer/src/main/java/org/serviceEngineering/adrViewer/controller)
- [backend.ADR_Viewer.src.main.java.org.serviceEngineering.adrViewer.service](../../backend/ADR_Viewer/src/main/java/org/serviceEngineering/adrViewer/service)
- [backend.ADR_Viewer.src.main.java.org.serviceEngineering.adrViewer.repository](../../backend/ADR_Viewer/src/main/java/org/serviceEngineering/adrViewer/respository)
- [backend.ADR_Viewer.src.main.java.org.serviceEngineering.adrViewer.entity](../../backend/ADR_Viewer/src/main/java/org/serviceEngineering/adrViewer/controller)
- [backend.ADR_Viewer.src.main.java.org.serviceEngineering.adrViewer.div](../../backend/ADR_Viewer/src/main/java/org/serviceEngineering/adrViewer/entity/)
- [backend.ADR_Viewer.src.main.java.org.serviceEngineering.adrViewer.exceptions](../../backend/ADR_Viewer/src/main/java/org/serviceEngineering/adrViewer/exceptions)

## Relations

- extended by [ADR 016](adr-016.md)
- related to [ADR 014](adr-014.md)
- related to [ADR 003](adr-003.md)
